name: Check

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main

jobs:
  check:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12']
    
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      id: setup-python
      with:
        python-version: ${{ matrix.python-version }}

    - name: Setup poetry
      uses: abatilo/actions-poetry@v4
      with:
        poetry-version: '2.1.4'

    - name: Setup a local virtual environment
      run: |
        poetry env use ${{ steps.setup-python.outputs.python-path }}
        poetry run python --version
        poetry config virtualenvs.create true --local
        poetry config virtualenvs.in-project true --local

    - uses: actions/cache@v4
      name: Define a cache for the virtual environment based on the dependencies lock file
      id: cache
      with:
        path: ./.venv
        key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('poetry.lock') }}

    - name: Ensure cache is healthy
      if: steps.cache.outputs.cache-hit == 'true'
      shell: bash
      run: poetry run pip --version >/dev/null 2>&1 || (echo "Cache is broken, skip it" && rm -rf .venv)

    - name: Install dependencies
      run: poetry install

    - name: Run tests
      run: poetry run pytest --verbose --tb=short
